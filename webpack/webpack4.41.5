//package.json
{
  "name": "newoa",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "watch": "webpack --watch --progress --config  webpack.config.js",
    "dev": "webpack-dev-server"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "ajv": "^6.0.0",
    "clipboard": "^2.0.4",
    "file-loader": "^3.0.1",
    "less": "^3.9.0",
    "less-loader": "^5.0.0",
    "npm": "^6.13.4",
    "postcss-preset-env": "^6.6.0",
    "webpack-dev-middleware": "^2.0.0",
    "webpack-dev-server": "^3.10.1"
  },
  "devDependencies": {
    "autoprefixer": "^9.5.0",
    "axios": "^0.18.1",
    "babel-cli": "^6.24.1",
    "babel-core": "^6.22.1",
    "babel-loader": "^7.1.1",
    "babel-preset-env": "^1.3.2",
    "babel-preset-es2015": "^6.24.1",
    "css-loader": "^1.0.1",
    "extract-text-webpack-plugin": "^4.0.0-beta.0",
    "glob": "^7.1.3",
    "node-sass": "^4.10.0",
    "postcss-loader": "^3.0.0",
    "sass-loader": "^7.1.0",
    "style-loader": "^0.23.1",
    "uglifyjs-webpack-plugin": "^1.1.1",
    "webpack": "^4.41.5",
    "webpack-cli": "^3.3.10"
  },
  "description": ""
}

//webpack.config.js
const path=require('path');
const uglify=require('uglifyjs-webpack-plugin');
const extractTextPlugin =require('extract-text-webpack-plugin')
const glob=require("glob");
let arr=['./js/app/report/*.js','./js/*.js','./js/app/*.js','./js/app/overTime/*.js','./js/app/askForLeave/*.js','./js/app/reimburse/*.js','./js/app/other/*.js']
let dir=(file)=>{
  let brr={};
  for(let i=0;i<file.length;i++){
      let b=path.basename(file[i],".js")
       brr[b]=file[i]
  }
  return brr
}
var obj={};
for(let i=0;i<arr.length;i++){
   let file=glob.sync(arr[i])
   let obj1=dir(file)
   obj=Object.assign({},obj,obj1)
}

module.exports={
      devtool:"source-map",
      mode:"development",
      entry:obj,
      output:{
         path:path.resolve(__dirname, "./dist/js"),
         filename:'[name].js'
      },
      resolve:{
        extensions:[".js",".scss",".css"],
        alias:{
           '@/public':path.resolve(__dirname,'js/publicNew')
        }
      },
      watch:true,
      watchOptions:{
        ignored:/node_modules/,
        poll:1000,
        aggregateTimeout:500
      },
      module:{
        rules:[
            {
                test:/(\.jsx|\.js)$/,
                use:{
                    loader:"babel-loader",
                    options:{
                        cacheDirectory: true,
                        presets:[
                            "env"
                        ]
                    }
                },
                exclude:[
                     path.resolve(__dirname,"node_modules"),
                           ],
                include:[
                ]
            },
            {
              test:/\.css$/,
              use:extractTextPlugin.extract({
                fallback: "style-loader",
                use:[
                    {loader:"css-loader"},
                    {loader:"postcss-loader"},
                ]
               })
            },
            {
              test:/\.(png|jpg|svg|bmp|woff|eot|ttf|woff2)$/,
              use:{
                loader:"file-loader",
                options:{
                  //指定拷贝文件的输出目录
                  outputPath:"../css"
               }
              }
            },
            {
               test:/\.scss$/,
               use:extractTextPlugin.extract({
                fallback: "style-loader",
                use: [{
                    loader: "css-loader"
                },
                {loader:"postcss-loader"},
                 {
                    loader: "sass-loader"
                }
             ]
              
            })

            },
            {
              test:/\.less$/,
              use:extractTextPlugin.extract({
                fallback: "style-loader",
                use: [{
                  loader: "css-loader"
              },
              {loader:"postcss-loader"},
               {
                  loader: "less-loader"
              }
              ]
              })
            }
        ]
      },
      plugins:[
        new uglify({
            sourceMap: true
        }),
        new extractTextPlugin("../css/index.css")
       
      ],
      devServer:{
        contentBase:path.resolve(__dirname,'./dist'),
        host:"localhost",
        port:8083,
        hot:true,
        compress:true, 
      }

}
