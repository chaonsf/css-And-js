<div id="btn" class="ui button showDialog">查看VM</div>


<script id="scriptEditorDialog" type="text/html">
    <div class="template">
    </div>
</script>

<script type="text/x-template" id="all">
    <div id="demo"> 
        <table class="ui small celled table">
              <tr>
                  <td class="field_label fd_lbl_color bold">医嘱</td>
                  <td colspan="3">
                      <smui_dropdown ref="main" class="mini" v-bind="{settings:doctorOrderTypePkg.settings,queryParams:doctorOrderTypePkg.queryParams,row:formData}" v-model="formData.DOCTOR_ORDER_TYPE" 
                                     v-on:selected:all="getDoctorOrderType(0,$event)" v-on:loadSuccess="cbLoadSuccess"></smui_dropdown>
                      <smui_dropdown ref="doctorOrderItem" class="mini" v-bind="{settings:doctorOrderItemPkg.settings,queryParams:doctorOrderItemPkg.queryParams,row:formData}" v-model="formData.ORDER_LINK_KEY" 
                                     v-on:selected:all="getOrderLinkType" v-on:loadSuccess="cbLoadSuccess"></smui_dropdown>

                  </td>
              </tr>
            <tr>
                <td class="field_label fd_lbl_color bold">金额1</td>
                <td>
                    <smui_text class="mini" v-bind="{settings:amountPkg.settings,readOnly:amountPkg.readOnly,row:formData,style:'width:100px'}" v-model="formData.AMOUNT1" v-on:textbox:change="textChanged" v-on:textbox:keyEvents="textKeyEvents">
                    </smui_text>

                </td>
                <td class="field_label fd_lbl_color bold" style="width:80px;">金额2</td>
                <td>
                    <smui_text class="mini left icon right labeled" v-bind="{settings:amountPkg.settings,readOnly:amountPkg.readOnly,row:formData,style:'width:100px'}" v-model="formData.AMOUNT2" v-on:textbox:change="textChanged" v-on:textbox:keyEvents="textKeyEvents">
                        <i class="edit icon"></i>
                        <a class="ui label">
                            点我也没用
                        </a>
                    </smui_text>

                </td>
            </tr>
            <tr>
                <td class="field_label fd_lbl_color bold">满意度</td>
                <td colspan="3">
                    <smui_checkbox v-bind="{settings:ckPkg.checkboxSettings,label:'是否满意','true-value':'Y','false-value':'N'}" v-model="formData.checkedValue"></smui_checkbox>
                    <smui_checkbox v-bind="{settings:ckPkg.radioSettings,label:ckPkg.radioPkg.label,readOnly:ckPkg.radioReadOnly,'true-value':'YES'}" v-model="formData.radioCheckedValue" v-on:checkbox:change="checkboxChange"></smui_checkbox>
                    <smui_checkbox v-bind="{settings:ckPkg.radioSettings,label:ckPkg.radio2Pkg.label,readOnly:ckPkg.radioReadOnly,'true-value':'NO'}" v-model="formData.radioCheckedValue" v-on:checkbox:change="checkboxChange"></smui_checkbox>
                </td>
            </tr>
            <tr>
                <td class="field_label fd_lbl_color bold">用户</td>
                <td colspan="3">
                    <smui_search v-bind="{settings:searchPkg.settings,row:formData}" v-model="formData.MEMBER_KEY" v-on:search:select="searchSelect" v-on:search:textChange="searchTextChange"></smui_search>
          
                </td>
            </tr>
</table>       

     </div>

</script>

     

    @section Scripts {
        @Scripts.Render(Url.Content("~/Scripts/vuejs/vue.min.js"))
        @Scripts.Render(Url.Content("~/Scripts/vue_component/vue_smui_dropdown.js"))
    @Scripts.Render(Url.Content("~/Scripts/vue_component/vue_smui_text.js"))
@Scripts.Render(Url.Content("~/Scripts/vue_component/vue_smui_checkbox.js"))
@Scripts.Render(Url.Content("~/Scripts/vue_component/vue_smui_search.js"))
        <script>
            var vm;
           
            ~(function () {
                var demoFormEdit = {
                    
                    formData: {
                            DOCTOR_ORDER_TYPE: 25001,
                            ORDER_LINK_KEY: 50011,
                        AMOUNT1:123,
                        AMOUNT2: 0,
                        checkedValue: "Y",
                        radioCheckedValue: "NO",
                        MEMBER_KEY: 103,
                        MEMBER_NAME: "",
                        MEMBER_FULLNAME: "哈哈哈"
                    },
                    vueSetup: function (el) {
                        vm = new Vue({
                            el: el,
                            template: "#all",

                            data: {
                                formData:demoFormEdit.formData,
                                //医嘱类别配置
                                doctorOrderTypePkg: {
                                    settings: {
                                        autoFillFirstData: true,
                                        placeholder: "请选择医嘱类别",
                                        valueField: "VARIABLE_KEY",
                                        textField: "VARIABLE_DESC",
                                        fireChangeOnInit: false
                                    },
                                    queryParams:function ($props, $data) {
                                        return {
                                            SP_NAME: "SP_DOCTOR_ORDER_TYPE_DROPDOWN_LIST",
                                            m: "SELECT",
                                            CATALOG: 'OTHER_ADVICE'
                                        }
                                    }
                                },
                                //医嘱项目配置
                                doctorOrderItemPkg: {
                                    settings: {
                                        autoFillFirstData: true,
                                        placeholder: "请选择医嘱明细",
                                        valueField: "ORDER_LINK_KEY",
                                        textField: "ORDER_LINK_KEY_DESC",
                                        fireChangeOnInit: false
                                    },
                                    queryParams: function ($parent_data, $data) {
                                        if (!$parent_data || !$parent_data.formData.DOCTOR_ORDER_TYPE) {
                                            return false;
                                        }

                                        return {
                                            SP_NAME: "SP_DOCTOR_ORDER_DISPLAY_LIST",
                                            m: "SELECT",
                                            CATALOG: 'OTHER_ADVICE',
                                            DOCTOR_ORDER_TYPE: $parent_data.formData.DOCTOR_ORDER_TYPE
                                        }
                                    }

                                },
                                //金额配置
                                amountPkg:{
                                    settings: {
                                        placeholder: "请录入...",
                                        type: "float",
                                        minTarget: 1,
                                        maxTarget: 100,
                                        precision: 4
                                    },
                                    readOnly:true
                                
                                },
                                //单/复选框
                                ckPkg: {
                                    checkboxSettings: {

                                    },
                                    radioSettings: {
                                        name: "rb",
                                        type: "radio",
                                        fireChangeOnInit: true
                                    },
                                    radioReadOnly: false,
                                    radioPkg: {
 
                                        label: "满意"
                                    },
                                    radio2Pkg: {

                                        label: "不满意"
                                    }
                                },
                                searchPkg: {
                                    settings: {
                                        searchId: "MEMBER_KEY",
                                        queryParams: function () {
                                            return {
                                                m: "LIST",
                                                JSON_TYPE: "NOTOTAL",
                                                TB_NAME: "MEMBER",
                                                MEMBER_NAME: $(this).search("get value")
                                            }
                                        },
                                        searchQueryParams: function () {
                                            return {
                                                m: "LIST",
                                                TB_NAME: "MEMBER",
                                                MEMBER_NAME: $(".for_search.MEMBER_KEY  .ui.input.query").smui_text("getValue")
                                            }
                                        },
                                        popupWidth: 350,
                                        selectedTextFormat: '{MEMBER_FULLNAME}',
                                        valueField: 'MEMBER_KEY',
                                        searchFields: ['MEMBER_KEY'],
                                        popupTableFields: [{ title: "患者", name: 'MEMBER_FULLNAME', width: 80 },
                                                 { title: '证件号', name: 'CERT_ID_NUMBER' },
                                                 { title: '电话', name: 'CONTACT_PHONE', width: 80 },
                                                 { title: '性别', name: 'SEX_VARIABLE_KEY_DESC', width: 60 }
                                        ]
                                    }
                                }



                            },
                            computed: {
                               
                            },
                            methods: {
                                getDoctorOrderType: function (index, selItem) {
                                    console.log(selItem);
                                    console.log("display formData", JSON.stringify(vm.formData));
                                    vm.$refs.doctorOrderItem.refresh();
                                },
                                getOrderLinkType: function () {
                                    console.log(arguments);
                                },

                                getDoctorName: function (index, v, $event) {
                                    if (v) {
                                        if ($.isPlainObject(v)) {
                                            v = [v];
                                        }
                                        this.results[index].DOCTOR_KEY_DESC = $.map(v, function (item) {
                                            return item.DOCTOR_KEY_DESC;
                                        }).join(",");

                                    }
                                    console.log(this.results);
                                },
                                cbLoadSuccess: function (data) {
                                    console.log("loadSuccess", data);
                                },
                                cbDropdownAjaxComplete: function () {
                                    console.log("dropdown ajax complete");
                                },
                                textChanged: function (value, oldValue) {
                                    console.log(arguments)
                                },
                                textKeyEvents: function ($event) {
                                    if ($event.type == "keydown" && $event.which == 13) {
                                        $(".ui.dropdown:eq(0)>input:text").focus();
                                    }
                                },
                                checkboxChange: function () {
                                    console.log("checkbox", arguments);
                                },
                                searchSelect: function (result) {
                                    console.log("search:select", arguments);
                                    this.formData.MEMBER_NAME = result.MEMBER_FULLNAME;
                                },
                                searchTextChange: function () {
                                    console.log("search:textChange", arguments);
                                }
                            },
                            watch: {
                                selectedItem: function (item) {
                                }
                            }
                        })

                    },

                    openDialog:function(){
                        $("#scriptEditorDialog").dialog({
                            cls: "vm_dialog",////重要用于区分对话框,如果cls为空，将根据对象的class自动取值，若class也为空取随机数
                            title: "Vuejs Demo 对话框",
                            dlgWidth: 600,
                            dlgHeight: 600,
                            closed: false,//是否初始化以后即关闭对话框
                            autofocus: true,   //自动选中对话框内第一个文本框元素
                            bindOpen: function (dialog) {
                                demoFormEdit.vueSetup($(dialog).find(".template")[0]);
                            },
                            yes: function (dlg,idx) {
                                var vt = $(dlg).find("#demo")[0].__vue__
                                alert(JSON.stringify(vt.formData));
                                //return true;//返回true，可安全关闭
                            },
                            no: function () {
                                alert("点我关闭");
                                //页面自动关闭

                            }

                        })
                       
                    }
                }

                $(function () {
                     

                    $("#btn").click(function () {
                        demoFormEdit.openDialog();
                    })
                });


            }(jQuery))

        </script>
    }
