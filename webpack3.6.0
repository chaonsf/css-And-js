//package.json  注意各个包的版本号
{
  "name": "chargeup",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "watch": "webpack",
    "dev": "webpack-dev-server"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "file-loader": "^3.0.1",
    "postcss-preset-env": "^6.6.0",
    "webpack-dev-server": "^2.9.1"
  },
  "devDependencies": {
    "autoprefixer": "^9.5.0",
    "axios": "^0.18.0",
    "babel-cli": "^6.24.1",
    "babel-core": "^6.22.1",
    "babel-loader": "^7.1.1",
    "babel-preset-env": "^1.3.2",
    "babel-preset-es2015": "^6.24.1",
    "css-loader": "^1.0.1",
    "extract-text-webpack-plugin": "^3.0.2",
    "glob": "^7.1.3",
    "node-sass": "^4.10.0",
    "postcss-loader": "^3.0.0",
    "sass-loader": "^7.1.0",
    "style-loader": "^0.23.1",
    "uglifyjs-webpack-plugin": "^1.1.1",
    "webpack": "^3.6.0"
  },
  "description": ""
}
//webpack.config.js   参考jspang
const path=require('path');
const uglify=require('uglifyjs-webpack-plugin');
const extractTextPlugin =require('extract-text-webpack-plugin')
const glob=require("glob");

let files2=glob.sync("./es6/js/*.js")
let dir=(file)=>{
  let brr={};
  for(let i=0;i<file.length;i++){
      let b=path.basename(file[i],".js")
       brr[b]=file[i]
  }
  return brr
}
  let object2=dir(files2); 


module.exports={
      devtool:"source-map",
      entry:object2,
      output:{
         path:path.resolve(__dirname, "./dist/js"),
         filename:'[name].js'
      },
      resolve:{
        extensions:[".js",".scss",".css"],
        alias:{
        }
      },
      watch:true,
      watchOptions:{
        ignored:/node_modules/,
        poll:1000,
        aggregateTimeout:500
      },
      module:{
        rules:[
            {
                test:/(\.jsx|\.js)$/,
                use:{
                    loader:"babel-loader",
                    options:{
                        presets:[
                            "env"
                        ]
                    }
                },
                exclude:[
                     path.resolve(__dirname,"node_modules"),
                     path.resolve(__dirname,"src"),
                           ],
                include:path.resolve(__dirname,"static")
            },
            {
              test:/\.css$/,
              use:extractTextPlugin.extract({
                fallback: "style-loader",
                use:[
                    {loader:"css-loader"},
                    {loader:"postcss-loader"},
                ]
               })
            },
            {
              test:/\.(png|jpg|svg|bmp|woff|eot|ttf|woff2)$/,
              use:{
                loader:"file-loader",
                options:{
                  //指定拷贝文件的输出目录
                  outputPath:"../css"
               }
              }
            },
            {
               test:/\.scss$/,
               use:extractTextPlugin.extract({
                fallback: "style-loader",
                use: [{
                    loader: "css-loader"
                },
                {loader:"postcss-loader"},
                 {
                    loader: "sass-loader"
                }
             ]
              
            })

            }
        ]
      },
      plugins:[
        new uglify({
            sourceMap: true
        }),
        new extractTextPlugin("../css/index.css")
       
      ],
      devServer:{
        contentBase:"../chatroom",
        host:"localhost",
        port:8082,
        hot:true,
        compress:true, 
      }

}

//postcss.config.js
module.exports = {
    loader: 'postcss-loader',
    plugins:
    [
      require('autoprefixer')({
        "browsers": [
            "defaults",
            "not ie < 11",
            "last 2 versions",
            "> 1%",
            "iOS 7",
            "last 3 iOS versions"
        ]
    })
    ]
  }
